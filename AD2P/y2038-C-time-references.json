[
 {
   "Category": "Constant/Definition",
   "Name": "_USE_32BIT_TIME_T",
   "Header": "n/a",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "On 64-bit Windows, forces time_t to 32-bits"
 },
 {
   "Category": "Constant/Definition",
   "Name": "__DARWIN_CLK_TCK",
   "Header": "i386/_limits.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "No",
   "Mac OSX": "Yes (100)",
   "VxWorks": "No",
   "Description": "CLOCKS_PER_SECOND when __DARWIN_UNIX03 not defined"
 },
 {
   "Category": "Constant/Definition",
   "Name": "_POSIX_TZNAME_MAX",
   "Header": "limits.h",
   "C11 (ISO)": "No",
   "POSIX": "Yes",
   "Linux": "No",
   "Windows": "No",
   "Mac OSX": "Yes",
   "VxWorks": "Yes",
   "Description": "Max length of the tzname variable"
 },
 {
   "Category": "Constant/Definition",
   "Name": "_SC_CLK_TCK",
   "Header": "unistd.h",
   "C11 (ISO)": "No",
   "POSIX": "Yes",
   "Linux": "Yes",
   "Windows": "No",
   "Mac OSX": "Yes",
   "VxWorks": "No",
   "Description": "The system clock rate in ticks per sec"
 },
 {
   "Category": "Constant/Definition",
   "Name": "_XTIME_NSECS_PER_TICK",
   "Header": "thr/xtimec.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "# nsecs per tick (as related to xtime), defined as 100"
 },
 {
   "Category": "Constant/Definition",
   "Name": "_XTIME_TICKS_PER_TIME_T",
   "Header": "thr/xtimec.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "10M",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "# ticks per sec (as related to xtime), defined as 10M (__LONGLONG)"
 },
 {
   "Category": "Constant/Definition",
   "Name": "CLK_TCK",
   "Header": "Varies",
   "C11 (ISO)": "No",
   "POSIX": "No*",
   "Linux": "Yes*",
   "Windows": "Yes",
   "Mac OSX": "Yes",
   "VxWorks": "No",
   "Description": "The system clock rate in ticks per sec (* = marked as obsolete)"
 },
 {
   "Category": "Constant/Definition",
   "Name": "CLOCKS_PER_SEC",
   "Header": "time.h",
   "C11 (ISO)": "Yes",
   "POSIX": "1M",
   "Linux": "1M",
   "Windows": "1000",
   "Mac OSX": "1M or 100",
   "VxWorks": "sysClockRateGet",
   "Description": "The system clock rate in ticks per sec"
 },
 {
   "Category": "Constant/Definition",
   "Name": "TZNAME_MAX",
   "Header": "limits.h",
   "C11 (ISO)": "No",
   "POSIX": "Yes",
   "Linux": "Yes",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Max length of the tzname variable"
 },
 {
   "Category": "CPU Usage",
   "Name": "clock",
   "Header": "time.h",
   "C11 (ISO)": "Yes",
   "POSIX": "Yes",
   "Linux": "Yes",
   "Windows": "Yes",
   "Mac OSX": "Yes",
   "VxWorks": "Yes",
   "Description": "Gets the CPU time used, returned in a clock_t"
 },
 {
   "Category": "CPU Usage",
   "Name": "getrusage",
   "Header": "sys/resource.h",
   "C11 (ISO)": "No",
   "POSIX": "Yes",
   "Linux": "Yes",
   "Windows": "No",
   "Mac OSX": "Yes",
   "VxWorks": "No",
   "Description": "Gets info about resource utilization, returned in rusage structure"
 },
 {
   "Category": "Current Time",
   "Name": "_ftime",
   "Header": "sys/timeb.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Gets current time in secs by calling _ftime32 or _ftime64"
 },
 {
   "Category": "Current Time",
   "Name": "_ftime_s",
   "Header": "sys/timeb.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Gets current time in secs by calling _ftime32_s or ftime64_s"
 },
 {
   "Category": "Current Time",
   "Name": "_ftime32",
   "Header": "sys/timeb.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Gets current time in secs from Jan 1, 1970, limited to Jan 19, 2038"
 },
 {
   "Category": "Current Time",
   "Name": "_ftime32_s",
   "Header": "sys/timeb.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Gets current time in secs from Jan 1, 1970, limited to Jan 19, 2038"
 },
 {
   "Category": "Current Time",
   "Name": "_ftime64",
   "Header": "sys/timeb.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Gets current time in secs from Jan 1, 1970, limited to Dec 31, 3000"
 },
 {
   "Category": "Current Time",
   "Name": "_ftime64_s",
   "Header": "sys/timeb.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Gets current time in secs from Jan 1, 1970, limited to Dec 31, 3001"
 },
 {
   "Category": "Current Time",
   "Name": "_time32",
   "Header": "time.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Windows function for getting time in 32-bit time_t"
 },
 {
   "Category": "Current Time",
   "Name": "_time64",
   "Header": "time.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Windows function for getting time in 64-bit time_t"
 },
 {
   "Category": "Current Time",
   "Name": "ftime",
   "Header": "sys/timeb.h",
   "C11 (ISO)": "No",
   "POSIX": "No*",
   "Linux": "Yes",
   "Windows": "Yes",
   "Mac OSX": "Yes",
   "VxWorks": "No",
   "Description": "Gets current time in secs and msecs since epoch of Jan 1, 1970 as timeb"
 },
 {
   "Category": "Current Time",
   "Name": "GetDynamicTimeZoneInformation",
   "Header": "Windows.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Returns the current timezone and dynamic DST settings"
 },
 {
   "Category": "Current Time",
   "Name": "GetFileAttributesEx",
   "Header": "Windows.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Returns various data including FILETIMEs for create, write, and access"
 },
 {
   "Category": "Current Time",
   "Name": "GetFileTime",
   "Header": "Windows.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Returns the (creation, last access, and last write) times for a file or folder"
 },
 {
   "Category": "Current Time",
   "Name": "GetLocalTime",
   "Header": "Windows.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Gets the current system time (local time format), in a SYSTEMTIME struct"
 },
 {
   "Category": "Current Time",
   "Name": "GetSystemTime",
   "Header": "Windows.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Gets the current system time (UTC format), in SYSTEMTIME struct"
 },
 {
   "Category": "Current Time",
   "Name": "GetSystemTimeAdjustment",
   "Header": "Windows.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Gets system clock adjustments, 100 nsec units in DWORD"
 },
 {
   "Category": "Current Time",
   "Name": "GetSystemTimeAsFileTime",
   "Header": "Windows.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Gets accurate system time in UTC format as a FILETIME"
 },
 {
   "Category": "Current Time",
   "Name": "GetSystemTimePreciseAsFileTime",
   "Header": "Windows.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Gets accurate system time in UTC format as a FILETIME"
 },
 {
   "Category": "Current Time",
   "Name": "GetSystemTimes",
   "Header": "Windows.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Gets idle, kernel, and user times in FILETIME structs"
 },
 {
   "Category": "Current Time",
   "Name": "GetTickCount",
   "Header": "Windows.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Gets # of msecs since system start, rolls over after 49.7 days"
 },
 {
   "Category": "Current Time",
   "Name": "GetTickCount64",
   "Header": "Windows.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Gets # of msecs since system start, with resolution of 10-16 msecs"
 },
 {
   "Category": "Current Time",
   "Name": "gettimeofday",
   "Header": "sys/time.h",
   "C11 (ISO)": "No",
   "POSIX": "Yes*",
   "Linux": "Yes",
   "Windows": "No",
   "Mac OSX": "Yes",
   "VxWorks": "No",
   "Description": "Gets current date/time as a timeval struct"
 },
 {
   "Category": "Current Time",
   "Name": "SetDynamicTimeZoneInformation",
   "Header": "Windows.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Sets the current timezone and dynamic DST settings"
 },
 {
   "Category": "Current Time",
   "Name": "SetFileTime",
   "Header": "Windows.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Sets the (creation, last access, and last write) times for a file or folder"
 },
 {
   "Category": "Current Time",
   "Name": "SetLocalTime",
   "Header": "Windows.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Sets the current local date and time"
 },
 {
   "Category": "Current Time",
   "Name": "SetSystemTime",
   "Header": "Windows.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Sets the current system time using SYSTEMTIME struct with UTC"
 },
 {
   "Category": "Current Time",
   "Name": "SetSystemTimeAdjustment",
   "Header": "Windows.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Controls periodic adjustments to system clock, 100 nsec units in DWORD"
 },
 {
   "Category": "Current Time",
   "Name": "settimeofday",
   "Header": "sys/time.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "Yes",
   "Windows": "No",
   "Mac OSX": "Yes",
   "VxWorks": "No",
   "Description": "Sets current system time based on value in timeval struct"
 },
 {
   "Category": "Current Time",
   "Name": "stime",
   "Header": "time.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "Yes",
   "Windows": "No",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Sets current system time based on value in time_t"
 },
 {
   "Category": "Current Time",
   "Name": "time",
   "Header": "time.h",
   "C11 (ISO)": "Yes",
   "POSIX": "Yes",
   "Linux": "Yes",
   "Windows": "Yes",
   "Mac OSX": "Yes",
   "VxWorks": "Yes",
   "Description": "Gets time since epoch in a time_t"
 },
 {
   "Category": "Env Variable",
   "Name": "_daylight",
   "Header": "n/a",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Nonzero if DST is specified in TZ or determined from the OS, otherwise 0"
 },
 {
   "Category": "Env Variable",
   "Name": "_dstbias",
   "Header": "n/a",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Difference between standard and DST in seconds"
 },
 {
   "Category": "Env Variable",
   "Name": "_timezone",
   "Header": "n/a",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Difference between UTC and local time in seconds"
 },
 {
   "Category": "Env Variable",
   "Name": "_tzname[0]",
   "Header": "n/a",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Non-DST zone name derived from  TZ, e.g. \"PST\""
 },
 {
   "Category": "Env Variable",
   "Name": "_tzname[1]",
   "Header": "n/a",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "DST zone name derived from TZ, e.g. \"PDT\""
 },
 {
   "Category": "Env Variable",
   "Name": "DATE",
   "Header": "n/a",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Holds the current date, e.g. \"Fri 12/25/2015\""
 },
 {
   "Category": "Env Variable",
   "Name": "DATEMSK",
   "Header": "n/a",
   "C11 (ISO)": "No",
   "POSIX": "Yes",
   "Linux": "Yes",
   "Windows": "No",
   "Mac OSX": "Yes",
   "VxWorks": "No",
   "Description": "Indicates the pathname of the template file used by getdate()"
 },
 {
   "Category": "Env Variable",
   "Name": "HZ",
   "Header": "n/a",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "Yes",
   "Windows": "No",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Tells # of timer interrupts per second, infrequently used"
 },
 {
   "Category": "Env Variable",
   "Name": "TIME",
   "Header": "n/a",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Holds the current time, e.g. \"23:42:49.56\""
 },
 {
   "Category": "Env Variable",
   "Name": "TIMEZONE",
   "Header": "n/a",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "No",
   "Mac OSX": "No",
   "VxWorks": "Yes",
   "Description": "Represents timezone information"
 },
 {
   "Category": "Env Variable",
   "Name": "TZ",
   "Header": "n/a",
   "C11 (ISO)": "No",
   "POSIX": "Yes",
   "Linux": "Yes",
   "Windows": "Yes",
   "Mac OSX": "Yes",
   "VxWorks": "No",
   "Description": "Represents timezone information"
 },
 {
   "Category": "Env Variable",
   "Name": "TZDIR",
   "Header": "n/a",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "Yes",
   "Windows": "No",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Used by glibc to specify an alternate timezone information file"
 },
 {
   "Category": "File System",
   "Name": "_fstat",
   "Header": "sys/stat.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "Yes",
   "VxWorks": "No",
   "Description": "Gets info about open file, using _stat struct"
 },
 {
   "Category": "File System",
   "Name": "_fstat32",
   "Header": "sys/stat.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Gets info about open file, using _stat32 struct"
 },
 {
   "Category": "File System",
   "Name": "_fstat32i64",
   "Header": "sys/stat.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Gets info about open file, using _stat32i64 struct"
 },
 {
   "Category": "File System",
   "Name": "_fstat64",
   "Header": "sys/stat.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Gets info about open file, using __stat64 struct"
 },
 {
   "Category": "File System",
   "Name": "_fstat64i32",
   "Header": "sys/stat.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Gets info about open file, using _stat64i32 struct"
 },
 {
   "Category": "File System",
   "Name": "_fstati64",
   "Header": "sys/stat.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Gets info about open file, using _stati64 struct"
 },
 {
   "Category": "File System",
   "Name": "_futime",
   "Header": "sys/utime.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Sets mod time on open file, using _utimbuf struct"
 },
 {
   "Category": "File System",
   "Name": "_futime32",
   "Header": "sys/utime.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Sets mod time on open file, using _utimbuf32 struct"
 },
 {
   "Category": "File System",
   "Name": "_futime64",
   "Header": "sys/utime.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Sets mod time on open file, using _utimbuf64 struct"
 },
 {
   "Category": "File System",
   "Name": "_stat",
   "Header": "sys/stat.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Gets info about a file, returned as _stat struct"
 },
 {
   "Category": "File System",
   "Name": "_stat32",
   "Header": "sys/stat.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Gets info about a file, returned as _stat32 struct"
 },
 {
   "Category": "File System",
   "Name": "_stat32i64",
   "Header": "sys/stat.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Gets info about a file, returned as _stat32i64 struct"
 },
 {
   "Category": "File System",
   "Name": "_stat64",
   "Header": "sys/stat.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Gets info about a file, returned as __stat64 struct"
 },
 {
   "Category": "File System",
   "Name": "_stat64i32",
   "Header": "sys/stat.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Gets info about a file, returned as _stat64i32 struct"
 },
 {
   "Category": "File System",
   "Name": "_stati64",
   "Header": "sys/stat.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Gets info about a file, returned as _stati64 struct"
 },
 {
   "Category": "File System",
   "Name": "_utime",
   "Header": "sys/utime.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Sets mod time on file, using _utimbuf struct"
 },
 {
   "Category": "File System",
   "Name": "_utime32",
   "Header": "sys/utime.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Sets mod time on file, using _utimbuf32 struct"
 },
 {
   "Category": "File System",
   "Name": "_utime64",
   "Header": "sys/utime.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Sets mod time on file, using _utimbuf64 struct"
 },
 {
   "Category": "File System",
   "Name": "_wstat",
   "Header": "sys/stat.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Gets info about a file, returned as _stat struct"
 },
 {
   "Category": "File System",
   "Name": "_wstat32",
   "Header": "sys/stat.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Gets info about a file, returned as _stat32 struct"
 },
 {
   "Category": "File System",
   "Name": "_wstat32i64",
   "Header": "sys/stat.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Gets info about a file, returned as _stat32i64 struct"
 },
 {
   "Category": "File System",
   "Name": "_wstat64",
   "Header": "sys/stat.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Gets info about a file, returned as __stat64 struct"
 },
 {
   "Category": "File System",
   "Name": "_wstat64i32",
   "Header": "sys/stat.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Gets info about a file, returned as _stat64i32 struct"
 },
 {
   "Category": "File System",
   "Name": "_wstati64",
   "Header": "sys/stat.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Gets info about a file, returned as _stati64 struct"
 },
 {
   "Category": "File System",
   "Name": "_wutime",
   "Header": "sys/utime.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Sets mod time on file, using _utimbuf struct"
 },
 {
   "Category": "File System",
   "Name": "_wutime32",
   "Header": "sys/utime.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Sets mod time on file, using _utimbuf32 struct"
 },
 {
   "Category": "File System",
   "Name": "_wutime64",
   "Header": "sys/utime.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Sets mod time on file, using _utimbuf64 struct"
 },
 {
   "Category": "File System",
   "Name": "fstat",
   "Header": "sys/stat.h",
   "C11 (ISO)": "No",
   "POSIX": "Yes",
   "Linux": "Yes",
   "Windows": "Yes",
   "Mac OSX": "Yes",
   "VxWorks": "Yes",
   "Description": "Gets info about open file, returned in stat struct"
 },
 {
   "Category": "File System",
   "Name": "fstat64",
   "Header": "sys/stat.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "No",
   "Mac OSX": "Yes",
   "VxWorks": "No",
   "Description": "Gets info about open file, returned in stat64 struct"
 },
 {
   "Category": "File System",
   "Name": "fstatat",
   "Header": "sys/stat.h",
   "C11 (ISO)": "No",
   "POSIX": "Yes",
   "Linux": "Yes",
   "Windows": "Yes",
   "Mac OSX": "Yes",
   "VxWorks": "No",
   "Description": "Get info about an open file relative to given path, returned in stat struct"
 },
 {
   "Category": "File System",
   "Name": "fstatat64",
   "Header": "sys/stat.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "No",
   "Mac OSX": "Yes",
   "VxWorks": "No",
   "Description": "Get info about an open file relative to given path, returned in stat64 struct"
 },
 {
   "Category": "File System",
   "Name": "GetFileTime",
   "Header": "Windows.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Gets create, last write, and last access times for file opened with CreateFile"
 },
 {
   "Category": "File System",
   "Name": "lstat",
   "Header": "sys/stat.h",
   "C11 (ISO)": "No",
   "POSIX": "Yes",
   "Linux": "Yes",
   "Windows": "No",
   "Mac OSX": "Yes",
   "VxWorks": "No",
   "Description": "Gets info about a symbolic link, returned in stat struct"
 },
 {
   "Category": "File System",
   "Name": "lstat64",
   "Header": "sys/stat.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "Yes",
   "Windows": "No",
   "Mac OSX": "Yes",
   "VxWorks": "No",
   "Description": "Gets info about a symbolic link, returned in stat64 struct"
 },
 {
   "Category": "File System",
   "Name": "stat",
   "Header": "sys/stat.h",
   "C11 (ISO)": "No",
   "POSIX": "Yes",
   "Linux": "Yes",
   "Windows": "Yes",
   "Mac OSX": "Yes",
   "VxWorks": "Yes",
   "Description": "Gets info about a file, returned in stat struct"
 },
 {
   "Category": "File System",
   "Name": "stat64",
   "Header": "sys/stat.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "No",
   "Mac OSX": "Yes",
   "VxWorks": "No",
   "Description": "Gets info about a file, returned in stat64 struct"
 },
 {
   "Category": "File System",
   "Name": "utime",
   "Header": "utime.h",
   "C11 (ISO)": "No",
   "POSIX": "Yes",
   "Linux": "Yes",
   "Windows": "Yes",
   "Mac OSX": "Yes",
   "VxWorks": "Yes",
   "Description": "Set file access and mod times, using utimbuf struct"
 },
 {
   "Category": "Format Conv",
   "Name": "_ctime32",
   "Header": "time.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Convert a time32_t to a date/time string"
 },
 {
   "Category": "Format Conversion",
   "Name": "_ctime32_s",
   "Header": "time.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Convert a time32_t to a date/time string"
 },
 {
   "Category": "Format Conversion",
   "Name": "_ctime64",
   "Header": "time.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Convert a time64_t to a date/time string"
 },
 {
   "Category": "Format Conversion",
   "Name": "_ctime64_s",
   "Header": "time.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Convert a time64_t to a date/time string"
 },
 {
   "Category": "Format Conversion",
   "Name": "_gmtime32",
   "Header": "time.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Convert a time32_t to a tm struct"
 },
 {
   "Category": "Format Conversion",
   "Name": "_gmtime32_s",
   "Header": "time.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Convert a time32_t to a tm struct"
 },
 {
   "Category": "Format Conversion",
   "Name": "_gmtime64",
   "Header": "time.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Convert a time64_t to a tm struct"
 },
 {
   "Category": "Format Conversion",
   "Name": "_gmtime64_s",
   "Header": "time.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Convert a time64_t to a tm struct"
 },
 {
   "Category": "Format Conversion",
   "Name": "_localtime32",
   "Header": "time.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Convert a time32_t to a tm struct, adjusting for time zone"
 },
 {
   "Category": "Format Conversion",
   "Name": "_localtime32",
   "Header": "time.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Version of localtime for 32-bit time_t"
 },
 {
   "Category": "Format Conversion",
   "Name": "_localtime32_s",
   "Header": "time.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Convert a time32_t to a tm struct, adjusting for time zone"
 },
 {
   "Category": "Format Conversion",
   "Name": "_localtime64",
   "Header": "time.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Convert a time64_t to a tm struct, adjusting for time zone"
 },
 {
   "Category": "Format Conversion",
   "Name": "_localtime64",
   "Header": "time.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Version of localtime for 64-bit time_t (valid until Dec 31, 3000)"
 },
 {
   "Category": "Format Conversion",
   "Name": "_localtime64_s",
   "Header": "time.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Convert a time64_t to a tm struct, adjusting for time zone"
 },
 {
   "Category": "Format Conversion",
   "Name": "_mkgmtime",
   "Header": "time.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Convert a UTC time in a tm struct to a UTC time in a time_t"
 },
 {
   "Category": "Format Conversion",
   "Name": "_mkgmtime32",
   "Header": "time.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Convert a UTC time in a tm struct to a UTC time in a time32_t"
 },
 {
   "Category": "Format Conversion",
   "Name": "_mkgmtime64",
   "Header": "time.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Convert a UTC time in a tm struct to a UTC time in a time64_t"
 },
 {
   "Category": "Format Conversion",
   "Name": "_mktime32",
   "Header": "time.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Convert a local time in tm struct to a time32_t"
 },
 {
   "Category": "Format Conversion",
   "Name": "_mktime64",
   "Header": "time.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Convert a local time in tm struct to a time64_t"
 },
 {
   "Category": "Format Conversion",
   "Name": "_strdate",
   "Header": "time.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Copies the current system date to a buffer in format DD/MM/YY"
 },
 {
   "Category": "Format Conversion",
   "Name": "_strdate_s",
   "Header": "time.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Copies the current system date to a buffer in format DD/MM/YY"
 },
 {
   "Category": "Format Conversion",
   "Name": "_strftime_l",
   "Header": "time.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Convert a time in a tm struct to a string using a specified format and locale"
 },
 {
   "Category": "Format Conversion",
   "Name": "_strtime",
   "Header": "time.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Copied the current system time to a buffer in format HH:MM:SS"
 },
 {
   "Category": "Format Conversion",
   "Name": "_strtime_s",
   "Header": "time.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Copied the current system time to a buffer in format HH:MM:SS"
 },
 {
   "Category": "Format Conversion",
   "Name": "_tstrdate",
   "Header": "tchar.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Same as _wstrdate"
 },
 {
   "Category": "Format Conversion",
   "Name": "_tstrdate_s",
   "Header": "tchar.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Same as _wstrdate_s"
 },
 {
   "Category": "Format Conversion",
   "Name": "_tstrtime",
   "Header": "tchar.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Same as _wstrtime"
 },
 {
   "Category": "Format Conversion",
   "Name": "_tstrtime_s",
   "Header": "tchar.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Same as _wstrtime_s"
 },
 {
   "Category": "Format Conversion",
   "Name": "_wasctime_s",
   "Header": "time.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Convert a tm struct to a string"
 },
 {
   "Category": "Format Conversion",
   "Name": "_wcsftime_l",
   "Header": "wchar.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Convert time in tm struct to wide char string using a specified format and locale"
 },
 {
   "Category": "Format Conversion",
   "Name": "_wctime",
   "Header": "time.h or wchar.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Convert a time_t to a wide date/time string"
 },
 {
   "Category": "Format Conversion",
   "Name": "_wctime_s",
   "Header": "time.h or wchar.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Convert a time_t to a wide date/time string"
 },
 {
   "Category": "Format Conversion",
   "Name": "_wctime32",
   "Header": "time.h or wchar.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Convert a time32_t to a wide date/time string"
 },
 {
   "Category": "Format Conversion",
   "Name": "_wctime32_s",
   "Header": "time.h or wchar.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Convert a time32_t to a wide date/time string"
 },
 {
   "Category": "Format Conversion",
   "Name": "_wctime64",
   "Header": "time.h or wchar.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Convert a time64_t to a wide date/time string"
 },
 {
   "Category": "Format Conversion",
   "Name": "_wctime64_s",
   "Header": "time.h or wchar.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Convert a time64_t to a wide date/time string"
 },
 {
   "Category": "Format Conversion",
   "Name": "_wstrdate",
   "Header": "time.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "The wide-character version of _strdate"
 },
 {
   "Category": "Format Conversion",
   "Name": "_wstrdate_s",
   "Header": "time.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "The wide-character version of _strdate_s"
 },
 {
   "Category": "Format Conversion",
   "Name": "_wstrtime",
   "Header": "time.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "The wide-character version of _strtime"
 },
 {
   "Category": "Format Conversion",
   "Name": "_wstrtime_s",
   "Header": "time.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "The wide-character version of _strtime_s"
 },
 {
   "Category": "Format Conversion",
   "Name": "asctime",
   "Header": "time.h",
   "C11 (ISO)": "Yes",
   "POSIX": "Yes",
   "Linux": "Yes",
   "Windows": "Yes",
   "Mac OSX": "Yes",
   "VxWorks": "Yes",
   "Description": "Convert a date/time in a tm struct to a string"
 },
 {
   "Category": "Format Conversion",
   "Name": "asctime_r",
   "Header": "time.h",
   "C11 (ISO)": "No",
   "POSIX": "Yes",
   "Linux": "Yes",
   "Windows": "No",
   "Mac OSX": "Yes",
   "VxWorks": "Yes",
   "Description": "Convert a date/time in a tm struct to a string"
 },
 {
   "Category": "Format Conversion",
   "Name": "asctime_s",
   "Header": "time.h",
   "C11 (ISO)": "Yes",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "Yes",
   "VxWorks": "No",
   "Description": "Convert a tm struct to a string"
 },
 {
   "Category": "Format Conversion",
   "Name": "ctime",
   "Header": "time.h",
   "C11 (ISO)": "Yes",
   "POSIX": "Yes",
   "Linux": "Yes",
   "Windows": "Yes",
   "Mac OSX": "Yes",
   "VxWorks": "Yes",
   "Description": "Convert a time_t to a date/time string"
 },
 {
   "Category": "Format Conversion",
   "Name": "ctime_r",
   "Header": "time.h",
   "C11 (ISO)": "No",
   "POSIX": "Yes",
   "Linux": "Yes",
   "Windows": "No",
   "Mac OSX": "Yes",
   "VxWorks": "Yes",
   "Description": "Convert a time_t to a date/time string"
 },
 {
   "Category": "Format Conversion",
   "Name": "ctime_s",
   "Header": "time.h",
   "C11 (ISO)": "Yes",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Convert a time_t to a date/time string"
 },
 {
   "Category": "Format Conversion",
   "Name": "DosDateTimeToFileTime",
   "Header": "Windows.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Convert MSDOS date/time to FILETIME"
 },
 {
   "Category": "Format Conversion",
   "Name": "ExLocalTimeToSystemTime",
   "Header": "Wdm.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Convert system time for current time zone to unbiased GMT"
 },
 {
   "Category": "Format Conversion",
   "Name": "ExSystemTimeToLocalTime",
   "Header": "Wdm.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Convert GMT system time to local system time for current time zone"
 },
 {
   "Category": "Format Conversion",
   "Name": "FileTimeToDosDateTime",
   "Header": "Windows.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Convert FILETIME to MSDOS date/time"
 },
 {
   "Category": "Format Conversion",
   "Name": "FileTimeToLocalFileTime",
   "Header": "Windows.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Convert a UTC-based FILETIME to a local time-based FILETIME"
 },
 {
   "Category": "Format Conversion",
   "Name": "FileTimeToSystemTime",
   "Header": "Windows.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Convert a FILETIME to a SYSTEMTIME (broken out, UTC-based)"
 },
 {
   "Category": "Format Conversion",
   "Name": "getdate",
   "Header": "time.h",
   "C11 (ISO)": "No",
   "POSIX": "Yes",
   "Linux": "Yes",
   "Windows": "No",
   "Mac OSX": "Yes",
   "VxWorks": "No",
   "Description": "Converts date/time string to struct tm"
 },
 {
   "Category": "Format Conversion",
   "Name": "getdate_r",
   "Header": "time.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "Yes",
   "Windows": "No",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "GNU re-entrant version of getdate"
 },
 {
   "Category": "Format Conversion",
   "Name": "gmtime",
   "Header": "time.h",
   "C11 (ISO)": "Yes",
   "POSIX": "Yes",
   "Linux": "Yes",
   "Windows": "Yes",
   "Mac OSX": "Yes",
   "VxWorks": "Yes",
   "Description": "Convert a time_t to a tm struct"
 },
 {
   "Category": "Format Conversion",
   "Name": "gmtime_r",
   "Header": "time.h",
   "C11 (ISO)": "No",
   "POSIX": "Yes",
   "Linux": "Yes",
   "Windows": "No",
   "Mac OSX": "Yes",
   "VxWorks": "Yes",
   "Description": "Convert a time_t to a tm struct"
 },
 {
   "Category": "Format Conversion",
   "Name": "gmtime_s",
   "Header": "time.h",
   "C11 (ISO)": "Yes",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Convert a time_t to a tm struct"
 },
 {
   "Category": "Format Conversion",
   "Name": "LocalFileTimeToFileTime",
   "Header": "Windows.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Convert a local FILETIME to a FILETIME based on UTC"
 },
 {
   "Category": "Format Conversion",
   "Name": "localtime",
   "Header": "time.h",
   "C11 (ISO)": "Yes",
   "POSIX": "Yes",
   "Linux": "Yes",
   "Windows": "Yes",
   "Mac OSX": "Yes",
   "VxWorks": "Yes",
   "Description": "Convert a time_t to a tm struct, adjusting for time zone"
 },
 {
   "Category": "Format Conversion",
   "Name": "localtime_r",
   "Header": "time.h",
   "C11 (ISO)": "No",
   "POSIX": "Yes",
   "Linux": "Yes",
   "Windows": "No",
   "Mac OSX": "Yes",
   "VxWorks": "Yes",
   "Description": "Convert a time_t to a tm struct, adjusting for time zone"
 },
 {
   "Category": "Format Conversion",
   "Name": "localtime_s",
   "Header": "time.h",
   "C11 (ISO)": "Yes",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Convert a time_t to a tm struct, adjusting for time zone"
 },
 {
   "Category": "Format Conversion",
   "Name": "mktime",
   "Header": "time.h",
   "C11 (ISO)": "Yes",
   "POSIX": "Yes",
   "Linux": "Yes",
   "Windows": "Yes",
   "Mac OSX": "Yes",
   "VxWorks": "Yes",
   "Description": "Convert a local time in tm struct to a time_t"
 },
 {
   "Category": "Format Conversion",
   "Name": "RtlLocalTimeToSystemTime",
   "Header": "Windows.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Convert local time in LARGE_INTEGER to system time in LARGE_INTEGER"
 },
 {
   "Category": "Format Conversion",
   "Name": "RtlTimeToSecondsSince1970",
   "Header": "Windows.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Convert system time in LARGE_INTEGER to # seconds since 1970 in ULONG"
 },
 {
   "Category": "Format Conversion",
   "Name": "strftime",
   "Header": "time.h",
   "C11 (ISO)": "Yes",
   "POSIX": "Yes",
   "Linux": "Yes",
   "Windows": "Yes",
   "Mac OSX": "Yes",
   "VxWorks": "Yes",
   "Description": "Convert a time in a tm struct to a string using a specified format"
 },
 {
   "Category": "Format Conversion",
   "Name": "strftime_l",
   "Header": "time.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "No",
   "Mac OSX": "Yes",
   "VxWorks": "No",
   "Description": "Convert a time in a tm struct to a string using a specified format and locale"
 },
 {
   "Category": "Format Conversion",
   "Name": "strptime",
   "Header": "time.h",
   "C11 (ISO)": "No",
   "POSIX": "Yes",
   "Linux": "Yes",
   "Windows": "No",
   "Mac OSX": "Yes",
   "VxWorks": "No",
   "Description": "Convert a string containing date/time to a tm struct using a given format"
 },
 {
   "Category": "Format Conversion",
   "Name": "strptime_l",
   "Header": "time.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "No",
   "Mac OSX": "Yes",
   "VxWorks": "No",
   "Description": "Convert a string containing date/time to a tm struct using a given format and locale"
 },
 {
   "Category": "Format Conversion",
   "Name": "SystemTimeToFileTime",
   "Header": "Windows.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Convert time in a SYSTEMTIME struct (in UTC) to a FILETIME"
 },
 {
   "Category": "Format Conversion",
   "Name": "SystemTimeToTzSpecificLocalTime",
   "Header": "Windows.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Convert UTC tie in SYSTEMTIME struct to SYSTEMTIME in specified time zone"
 },
 {
   "Category": "Format Conversion",
   "Name": "SystemTimeToTzSpecificLocalTimeEx",
   "Header": "Windows.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Convert UTC tie in SYSTEMTIME struct to SYSTEMTIME in specified time zone"
 },
 {
   "Category": "Format Conversion",
   "Name": "timegm",
   "Header": "time.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "Yes",
   "Windows": "No",
   "Mac OSX": "Yes",
   "VxWorks": "No",
   "Description": "Convert a UTC-based time in tm struct to a time_t"
 },
 {
   "Category": "Format Conversion",
   "Name": "timelocal",
   "Header": "time.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "Yes",
   "Windows": "No",
   "Mac OSX": "Yes",
   "VxWorks": "No",
   "Description": "Convert a local time in tm struct to a time_t (Equivalent of mktime)"
 },
 {
   "Category": "Format Conversion",
   "Name": "TzSpecificLocalTimeToSystemTime",
   "Header": "Windows.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Convert a local time in SYSTEMTIME to a UTC time also in SYSTEMTIME"
 },
 {
   "Category": "Format Conversion",
   "Name": "TzSpecificLocalTimeToSystemTimeEx",
   "Header": "Windows.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Convert a local time in SYSTEMTIME to a UTC time also in SYSTEMTIME"
 },
 {
   "Category": "Format Conversion",
   "Name": "wcsftime",
   "Header": "wchar.h",
   "C11 (ISO)": "Yes",
   "POSIX": "Yes",
   "Linux": "Yes",
   "Windows": "Yes",
   "Mac OSX": "Yes",
   "VxWorks": "No",
   "Description": "Convert a time in a tm struct to a wide char string using a specified format"
 },
 {
   "Category": "Global Variable",
   "Name": "daylight",
   "Header": "time.h",
   "C11 (ISO)": "No",
   "POSIX": "Yes",
   "Linux": "Yes",
   "Windows": "Yes",
   "Mac OSX": "Yes",
   "VxWorks": "No",
   "Description": "Set to 0 to disable DST conversions"
 },
 {
   "Category": "Global Variable",
   "Name": "timezone",
   "Header": "time.h",
   "C11 (ISO)": "No",
   "POSIX": "Yes",
   "Linux": "Yes",
   "Windows": "Yes",
   "Mac OSX": "Yes",
   "VxWorks": "No",
   "Description": "The difference in seconds between UTC and local standard time"
 },
 {
   "Category": "Global Variable",
   "Name": "tzname[0]",
   "Header": "time.h",
   "C11 (ISO)": "No",
   "POSIX": "Yes",
   "Linux": "Yes",
   "Windows": "Yes",
   "Mac OSX": "Yes",
   "VxWorks": "No",
   "Description": "The string for local standard time (without DST), e.g. \"EST\""
 },
 {
   "Category": "Global Variable",
   "Name": "tzname[1]",
   "Header": "time.h",
   "C11 (ISO)": "No",
   "POSIX": "Yes",
   "Linux": "Yes",
   "Windows": "Yes",
   "Mac OSX": "Yes",
   "VxWorks": "No",
   "Description": "The string for local daylight time (with DST), e.g. \"EDT\""
 },
 {
   "Category": "Macro",
   "Name": "__DATE__",
   "Header": "N/A",
   "C11 (ISO)": "Yes",
   "POSIX": "No",
   "Linux": "Yes",
   "Windows": "Yes",
   "Mac OSX": "Yes",
   "VxWorks": "Yes",
   "Description": "String of the current date in the form \"Mmm dd yyyy\""
 },
 {
   "Category": "Macro",
   "Name": "__TIME__",
   "Header": "N/A",
   "C11 (ISO)": "Yes",
   "POSIX": "No",
   "Linux": "Yes",
   "Windows": "Yes",
   "Mac OSX": "Yes",
   "VxWorks": "Yes",
   "Description": "String of the current time in the form \"hh:mm:ss\""
 },
 {
   "Category": "Macro",
   "Name": "LC_TIME",
   "Header": "locale.h",
   "C11 (ISO)": "Yes",
   "POSIX": "Yes",
   "Linux": "Yes",
   "Windows": "Yes",
   "Mac OSX": "Yes",
   "VxWorks": "Yes",
   "Description": "Used for formatting date and time values with strftime"
 },
 {
   "Category": "Msg Queue",
   "Name": "mq_timedreceive",
   "Header": "mqueue.h",
   "C11 (ISO)": "No",
   "POSIX": "Yes",
   "Linux": "Yes",
   "Windows": "No",
   "Mac OSX": "No",
   "VxWorks": "Yes",
   "Description": "Rcv a msg from a msg queue, wait max of absolute time in timespec struct"
 },
 {
   "Category": "Msg Queue",
   "Name": "mq_timedsend",
   "Header": "mqueue.h",
   "C11 (ISO)": "No",
   "POSIX": "Yes",
   "Linux": "Yes",
   "Windows": "No",
   "Mac OSX": "No",
   "VxWorks": "Yes",
   "Description": "Send a msg from a msg queue, wait max of absolute time in timespec struct"
 },
 {
   "Category": "Simple Type",
   "Name": "__darwin_suseconds_t",
   "Header": "sys/_types.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "No",
   "Mac OSX": "Yes",
   "VxWorks": "No",
   "Description": "A 32-bit signed integer representing usecs"
 },
 {
   "Category": "Simple Type",
   "Name": "__darwin_time_t",
   "Header": "i386/_types.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "No",
   "Mac OSX": "Yes",
   "VxWorks": "No",
   "Description": "Apple's time_t (defined as 'long')"
 },
 {
   "Category": "Simple Type",
   "Name": "__darwin_useconds_t",
   "Header": "sys/_types.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "No",
   "Mac OSX": "Yes",
   "VxWorks": "No",
   "Description": "A 32-bit unsigned integer representing usecs"
 },
 {
   "Category": "Simple Type",
   "Name": "__int64",
   "Header": "varies",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "Yes",
   "Windows": "Yes",
   "Mac OSX": "Yes",
   "VxWorks": "No",
   "Description": "A signed 64-bit signed integer"
 },
 {
   "Category": "Simple Type",
   "Name": "__suseconds_t",
   "Header": "bits/types.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "Yes",
   "Windows": "No",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "A 32-bit signed integer representing usecs"
 },
 {
   "Category": "Simple Type",
   "Name": "__time32_t",
   "Header": "time.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "A 32-bit signed integer (defined as long which is 32-bits on Windows)"
 },
 {
   "Category": "Simple Type",
   "Name": "__time64_t",
   "Header": "time.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "A 64-bit signed integer (defined as __int64)"
 },
 {
   "Category": "Simple Type",
   "Name": "__useconds_t",
   "Header": "bits/types.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "Yes",
   "Windows": "No",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "A 32-bit unsigned integer representing usecs"
 },
 {
   "Category": "Simple Type",
   "Name": "clock_res_t",
   "Header": "mach/clock_types.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "No",
   "Mac OSX": "Yes",
   "VxWorks": "No",
   "Description": "Defined as int"
 },
 {
   "Category": "Simple Type",
   "Name": "clock_t",
   "Header": "Varies",
   "C11 (ISO)": "Yes",
   "POSIX": "Yes",
   "Linux": "Yes",
   "Windows": "Yes",
   "Mac OSX": "Yes",
   "VxWorks": "Yes",
   "Description": "long on Linux and Windows, unsigned long on OSX, and unsigned int on VxWorks"
 },
 {
   "Category": "Simple Type",
   "Name": "DWORD",
   "Header": "Varies",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "Yes",
   "Windows": "Yes",
   "Mac OSX": "Yes",
   "VxWorks": "Yes",
   "Description": "A 32-bit unsigned integer"
 },
 {
   "Category": "Simple Type",
   "Name": "INT",
   "Header": "Several",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Same as int"
 },
 {
   "Category": "Simple Type",
   "Name": "int",
   "Header": "n/a",
   "C11 (ISO)": "Yes",
   "POSIX": "Yes",
   "Linux": "Yes",
   "Windows": "Yes",
   "Mac OSX": "Yes",
   "VxWorks": "Yes",
   "Description": "A signed integer; check platform for actual size"
 },
 {
   "Category": "Simple Type",
   "Name": "LONG",
   "Header": "Several",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "Yes",
   "Description": "Same as long (32-bits on all Windows)"
 },
 {
   "Category": "Simple Type",
   "Name": "long",
   "Header": "n/a",
   "C11 (ISO)": "Yes",
   "POSIX": "Yes",
   "Linux": "Yes",
   "Windows": "Yes",
   "Mac OSX": "Yes",
   "VxWorks": "Yes",
   "Description": "A signed integer; check platform for actual size"
 },
 {
   "Category": "Simple Type",
   "Name": "long long",
   "Header": "n/a",
   "C11 (ISO)": "Yes",
   "POSIX": "Yes",
   "Linux": "Yes",
   "Windows": "Yes",
   "Mac OSX": "Yes",
   "VxWorks": "Yes",
   "Description": "A signed 64-bit integer"
 },
 {
   "Category": "Simple Type",
   "Name": "LONGLONG",
   "Header": "Several",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "Yes",
   "Description": "Same as long long (64-bits)"
 },
 {
   "Category": "Simple Type",
   "Name": "size_t",
   "Header": "stddef.h",
   "C11 (ISO)": "Yes",
   "POSIX": "Yes",
   "Linux": "Yes",
   "Windows": "Yes",
   "Mac OSX": "Yes",
   "VxWorks": "Yes",
   "Description": "Defined as unsigned int on VxWorks"
 },
 {
   "Category": "Simple Type",
   "Name": "suseconds_t",
   "Header": "sys/types.h",
   "C11 (ISO)": "No",
   "POSIX": "Yes",
   "Linux": "Yes",
   "Windows": "No",
   "Mac OSX": "Yes",
   "VxWorks": "No",
   "Description": "A 32-bit signed integer representing usecs"
 },
 {
   "Category": "Simple Type",
   "Name": "time_t",
   "Header": "time.h",
   "C11 (ISO)": "Yes",
   "POSIX": "Yes",
   "Linux": "Yes",
   "Windows": "Yes",
   "Mac OSX": "Yes",
   "VxWorks": "Yes",
   "Description": "Secs since epoch; long on Linux and OSX, __time32_t or __time64_t on Windows, unsigned long on VxWorks for 32-bit systems"
 },
 {
   "Category": "Simple Type",
   "Name": "UINT",
   "Header": "Several",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Same as unsigned int"
 },
 {
   "Category": "Simple Type",
   "Name": "ULONG",
   "Header": "Several",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "Yes",
   "Description": "Same as unsigned long (32-bits on all Windows)"
 },
 {
   "Category": "Simple Type",
   "Name": "ULONGLONG",
   "Header": "Several",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "Yes",
   "Description": "Same as unsigned long long (64-bits)"
 },
 {
   "Category": "Simple Type",
   "Name": "unsigned int",
   "Header": "n/a",
   "C11 (ISO)": "Yes",
   "POSIX": "Yes",
   "Linux": "Yes",
   "Windows": "Yes",
   "Mac OSX": "Yes",
   "VxWorks": "Yes",
   "Description": "An unsigned integer; check platform for actual size"
 },
 {
   "Category": "Simple Type",
   "Name": "unsigned long",
   "Header": "n/a",
   "C11 (ISO)": "Yes",
   "POSIX": "Yes",
   "Linux": "Yes",
   "Windows": "Yes",
   "Mac OSX": "Yes",
   "VxWorks": "Yes",
   "Description": "An unsigned integer; check platform for actual size"
 },
 {
   "Category": "Simple Type",
   "Name": "unsigned long long",
   "Header": "n/a",
   "C11 (ISO)": "Yes",
   "POSIX": "Yes",
   "Linux": "Yes",
   "Windows": "Yes",
   "Mac OSX": "Yes",
   "VxWorks": "Yes",
   "Description": "An unsigned 64-bit integer"
 },
 {
   "Category": "Simple Type",
   "Name": "useconds_t",
   "Header": "sys/types.h",
   "C11 (ISO)": "No",
   "POSIX": "Yes",
   "Linux": "Yes",
   "Windows": "No",
   "Mac OSX": "Yes",
   "VxWorks": "No",
   "Description": "A 32-bit unsigned integer representing usecs"
 },
 {
   "Category": "Sleep Func",
   "Name": "_sleep",
   "Header": "stdlib.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Sleep for given # of (units unknown), in unsigned long"
 },
 {
   "Category": "Sleep Func",
   "Name": "_Thrd_sleep",
   "Header": "thr/xthreads.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Sleep unti an absolute time given in an xtime"
 },
 {
   "Category": "Sleep Func",
   "Name": "clock_nanosleep",
   "Header": "time.h",
   "C11 (ISO)": "No",
   "POSIX": "Yes",
   "Linux": "Yes",
   "Windows": "No",
   "Mac OSX": "No",
   "VxWorks": "Yes",
   "Description": "Sleep until an absolute time or relative time given in a timespec struct"
 },
 {
   "Category": "Sleep Func",
   "Name": "nanosleep",
   "Header": "time.h",
   "C11 (ISO)": "No",
   "POSIX": "Yes",
   "Linux": "Yes",
   "Windows": "No",
   "Mac OSX": "Yes",
   "VxWorks": "Yes",
   "Description": "Sleep for given # of nanoseconds given in a timespec struct"
 },
 {
   "Category": "Sleep Func",
   "Name": "sleep",
   "Header": "unistd.h",
   "C11 (ISO)": "No",
   "POSIX": "Yes",
   "Linux": "Yes",
   "Windows": "No",
   "Mac OSX": "Yes",
   "VxWorks": "Yes",
   "Description": "Sleep for given # of seconds in unsigned int"
 },
 {
   "Category": "Sleep Func",
   "Name": "sleep",
   "Header": "thr/thread",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Sleep until the absolute time given in an xtime"
 },
 {
   "Category": "Sleep Func",
   "Name": "Sleep",
   "Header": "Windows.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Sleep for given # of msecs in a DWORD"
 },
 {
   "Category": "Sleep Func",
   "Name": "sleep_for",
   "Header": "thread",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Sleep until a relative time"
 },
 {
   "Category": "Sleep Func",
   "Name": "sleep_until",
   "Header": "thread",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Sleep until an absolute time"
 },
 {
   "Category": "Sleep Func",
   "Name": "thrd_sleep",
   "Header": "thr/threads.h",
   "C11 (ISO)": "Yes",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Sleep until an absolute time given in an xtime"
 },
 {
   "Category": "Sleep Func",
   "Name": "usleep",
   "Header": "unistd.h",
   "C11 (ISO)": "No",
   "POSIX": "No*",
   "Linux": "Yes",
   "Windows": "No",
   "Mac OSX": "Yes",
   "VxWorks": "No",
   "Description": "Sleep for given # of usecs, in a useconds_t"
 },
 {
   "Category": "Structure",
   "Name": "DYNAMIC_TIME_ZONE_INFORMATION",
   "Header": "Windows.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Specifies settings for a time zone and dynamic daylight saving time"
 },
 {
   "Category": "Structure",
   "Name": "FILETIME",
   "Header": "Windows.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Contains 2 DWORDs for time since Jan 1, 1601 in units of 100 nsecs"
 },
 {
   "Category": "Structure",
   "Name": "LARGE_INTEGER",
   "Header": "Wtypes.Idl",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "A union containing 'LONGLONG QuadPart' (64-bit signed integer), etc"
 },
 {
   "Category": "Structure",
   "Name": "mach_timespec_t",
   "Header": "mach/clock_types.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "No",
   "Mac OSX": "Yes",
   "VxWorks": "No",
   "Description": "Contains unsigned int for seconds and (signed) int for nsecs"
 },
 {
   "Category": "Structure",
   "Name": "MMTIME",
   "Header": "Windows.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Contains timing information on various types of multimedia data"
 },
 {
   "Category": "Structure",
   "Name": "struct __stat64",
   "Header": "sys/stat.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Same as _stat64"
 },
 {
   "Category": "Structure",
   "Name": "struct __timeb32",
   "Header": "sys/timeb.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Contains __time32_t for time in secs, unsigned short for msecs"
 },
 {
   "Category": "Structure",
   "Name": "struct __timeb64",
   "Header": "sys/timeb.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Contains __time64_t for time in secs, unsigned short for msecs"
 },
 {
   "Category": "Structure",
   "Name": "struct __utimbuf32",
   "Header": "sys/utime.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Contains __time32_t for access and modification times"
 },
 {
   "Category": "Structure",
   "Name": "struct __utimbuf64",
   "Header": "sys/utime.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Contains __time64_t for access and modification times"
 },
 {
   "Category": "Structure",
   "Name": "struct _stat",
   "Header": "sys/stat.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Defined as  _stat32 or _stat64i32 depending on _USE_32BIT_TIME_T"
 },
 {
   "Category": "Structure",
   "Name": "struct _stat32",
   "Header": "sys/stat.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Contains __time32_t for st_atime, st_mtime, and st_ctime"
 },
 {
   "Category": "Structure",
   "Name": "struct _stat32i64",
   "Header": "sys/stat.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Contains __time32_t for st_atime, st_mtime, and st_ctime"
 },
 {
   "Category": "Structure",
   "Name": "struct _stat64i32",
   "Header": "sys/stat.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Defined as _stat32i64 or _stat64 depending on _USE_32BIT_TIME_T"
 },
 {
   "Category": "Structure",
   "Name": "struct _stati64",
   "Header": "sys/stat.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Contains __time64_t for st_atime, st_mtime, and st_ctime"
 },
 {
   "Category": "Structure",
   "Name": "struct _timeb",
   "Header": "sys/timeb.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Defined as __timeb32 or __timeb64 depending on _USE32BIT_TIME_T"
 },
 {
   "Category": "Structure",
   "Name": "struct _utimbuf",
   "Header": "sys/utime.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Contains time_t for access and modification times"
 },
 {
   "Category": "Structure",
   "Name": "struct itimerspec",
   "Header": "time.h",
   "C11 (ISO)": "No",
   "POSIX": "Yes",
   "Linux": "Yes",
   "Windows": "No",
   "Mac OSX": "No",
   "VxWorks": "Yes",
   "Description": "Contains timespec structs for timer period and expiration"
 },
 {
   "Category": "Structure",
   "Name": "struct itimerval",
   "Header": "sys/time.h",
   "C11 (ISO)": "No",
   "POSIX": "Yes",
   "Linux": "Yes",
   "Windows": "No",
   "Mac OSX": "Yes",
   "VxWorks": "No",
   "Description": "Contains timeval structs for timer period and expiration"
 },
 {
   "Category": "Structure",
   "Name": "struct mach_timespec",
   "Header": "mach/clock_types.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "No",
   "Mac OSX": "Yes",
   "VxWorks": "No",
   "Description": "Contains unsigned int for seconds and clock_res_t for nsecs"
 },
 {
   "Category": "Structure",
   "Name": "struct rusage",
   "Header": "sys/resource.h",
   "C11 (ISO)": "No",
   "POSIX": "Yes",
   "Linux": "Yes",
   "Windows": "No",
   "Mac OSX": "Yes",
   "VxWorks": "No",
   "Description": "Contains timeval structs for user and system time used"
 },
 {
   "Category": "Structure",
   "Name": "struct stat",
   "Header": "sys/stat.h",
   "C11 (ISO)": "No",
   "POSIX": "Yes",
   "Linux": "Yes",
   "Windows": "Yes",
   "Mac OSX": "Yes",
   "VxWorks": "Yes",
   "Description": "Contains fields for access, modification, and creation times"
 },
 {
   "Category": "Structure",
   "Name": "struct stat64",
   "Header": "sys/stat.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "Yes",
   "Windows": "No",
   "Mac OSX": "Yes",
   "VxWorks": "No",
   "Description": "Same as stat structure"
 },
 {
   "Category": "Structure",
   "Name": "struct timeb",
   "Header": "sys/timeb.h",
   "C11 (ISO)": "No",
   "POSIX": "Yes",
   "Linux": "Yes",
   "Windows": "Yes",
   "Mac OSX": "Yes",
   "VxWorks": "No",
   "Description": "Contains time_t for time in secs, unsigned short for msecs"
 },
 {
   "Category": "Structure",
   "Name": "struct timespec",
   "Header": "time.h",
   "C11 (ISO)": "Yes",
   "POSIX": "Yes",
   "Linux": "Yes",
   "Windows": "No",
   "Mac OSX": "Yes",
   "VxWorks": "Yes",
   "Description": "Contains fields for seconds and nsecs, time_t for secs, long for nsecs"
 },
 {
   "Category": "Structure",
   "Name": "struct timeval",
   "Header": "sys/time.h",
   "C11 (ISO)": "No",
   "POSIX": "Yes",
   "Linux": "Yes",
   "Windows": "Yes",
   "Mac OSX": "Yes",
   "VxWorks": "Yes",
   "Description": "Contains fields for seconds and usecs, types vary slightly per platform"
 },
 {
   "Category": "Structure",
   "Name": "struct tm",
   "Header": "time.h",
   "C11 (ISO)": "Yes",
   "POSIX": "Yes",
   "Linux": "Yes",
   "Windows": "Yes",
   "Mac OSX": "Yes",
   "VxWorks": "Yes",
   "Description": "Contains broken out date/time fields each of type int"
 },
 {
   "Category": "Structure",
   "Name": "struct tms",
   "Header": "sys/times.h",
   "C11 (ISO)": "No",
   "POSIX": "Yes",
   "Linux": "Yes",
   "Windows": "No",
   "Mac OSX": "Yes",
   "VxWorks": "No",
   "Description": "Contains clock_t for process times (user & system for current & children)"
 },
 {
   "Category": "Structure",
   "Name": "struct utimbuf",
   "Header": "sys/utime.h",
   "C11 (ISO)": "No",
   "POSIX": "Yes",
   "Linux": "Yes",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Contains time_t for access and modification times"
 },
 {
   "Category": "Structure",
   "Name": "struct utimbuf32",
   "Header": "sys/utime.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Contains __time32_t for access and modification times"
 },
 {
   "Category": "Structure",
   "Name": "SYSTEMTIME",
   "Header": "Windows.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Specifies a date and time in UTC or local time"
 },
 {
   "Category": "Structure",
   "Name": "TIME_FIELDS",
   "Header": "n/a",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Undocumented Windows struct"
 },
 {
   "Category": "Structure",
   "Name": "TIME_ZONE_INFORMATION",
   "Header": "Windows.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Specifies settings for a time zone"
 },
 {
   "Category": "Structure",
   "Name": "TIMECAPS",
   "Header": "Windows.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Contains timer resolution in min/max msecs in UINT"
 },
 {
   "Category": "Structure",
   "Name": "ULARGE_INTEGER",
   "Header": "Wtypes.Idl",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "A union containing 'ULONGLONG QuadPart' (64-bit unsigned integer), etc."
 },
 {
   "Category": "Structure",
   "Name": "WIN32_FILE_ATTRIBUTE_DATA",
   "Header": "Windows.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Returned by GetFileAttributesEx, contains FILETIMEs for a file"
 },
 {
   "Category": "Structure",
   "Name": "xtime",
   "Header": "thr/xtimec.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Contains time_t for seconds and long for nsecs."
 },
 {
   "Category": "System Clock",
   "Name": "clock_get_res",
   "Header": "mach/mach.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "No",
   "Mac OSX": "Yes",
   "VxWorks": "No",
   "Description": "OSX version of clock_getres"
 },
 {
   "Category": "System Clock",
   "Name": "clock_get_time",
   "Header": "mach/clock.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "No",
   "Mac OSX": "Yes",
   "VxWorks": "No",
   "Description": "OSX version of clock_gettime"
 },
 {
   "Category": "System Clock",
   "Name": "clock_getres",
   "Header": "time.h",
   "C11 (ISO)": "No",
   "POSIX": "Yes",
   "Linux": "Yes",
   "Windows": "No",
   "Mac OSX": "No",
   "VxWorks": "Yes",
   "Description": "Gets the resolution of a clock to the value in a timespec"
 },
 {
   "Category": "System Clock",
   "Name": "clock_gettime",
   "Header": "time.h",
   "C11 (ISO)": "No",
   "POSIX": "Yes",
   "Linux": "Yes",
   "Windows": "No",
   "Mac OSX": "No",
   "VxWorks": "Yes",
   "Description": "Gets the current value of a clock in a timespec"
 },
 {
   "Category": "System Clock",
   "Name": "clock_set_res",
   "Header": "mach/mach.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "No",
   "Mac OSX": "Yes",
   "VxWorks": "No",
   "Description": "OSX version of clock_setres"
 },
 {
   "Category": "System Clock",
   "Name": "clock_set_time",
   "Header": "mach/clock_priv.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "No",
   "Mac OSX": "Yes",
   "VxWorks": "No",
   "Description": "OSX version of clock_settime"
 },
 {
   "Category": "System Clock",
   "Name": "clock_setres",
   "Header": "time.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "No",
   "Mac OSX": "No",
   "VxWorks": "Yes",
   "Description": "Sets the resolution of a clock to the value in a timespec"
 },
 {
   "Category": "System Clock",
   "Name": "clock_settime",
   "Header": "time.h",
   "C11 (ISO)": "No",
   "POSIX": "Yes",
   "Linux": "Yes",
   "Windows": "No",
   "Mac OSX": "No",
   "VxWorks": "Yes",
   "Description": "Sets the current value of a clock in a timespec"
 },
 {
   "Category": "System Clock",
   "Name": "sysAuxClkConnect",
   "Header": "sysLib.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "No",
   "Mac OSX": "No",
   "VxWorks": "Yes",
   "Description": "Connect callback func to aux clock"
 },
 {
   "Category": "System Clock",
   "Name": "sysAuxClkDisable",
   "Header": "sysLib.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "No",
   "Mac OSX": "No",
   "VxWorks": "Yes",
   "Description": "Disable aux clock interrupt"
 },
 {
   "Category": "System Clock",
   "Name": "sysAuxClkEnable",
   "Header": "sysLib.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "No",
   "Mac OSX": "No",
   "VxWorks": "Yes",
   "Description": "Enable aux clock interrupt"
 },
 {
   "Category": "System Clock",
   "Name": "sysAuxClkRateGet",
   "Header": "sysLib.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "No",
   "Mac OSX": "No",
   "VxWorks": "Yes",
   "Description": "Get the aux clock rate"
 },
 {
   "Category": "System Clock",
   "Name": "sysAuxClkRateSet",
   "Header": "sysLib.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "No",
   "Mac OSX": "No",
   "VxWorks": "Yes",
   "Description": "Set the aux clock rate"
 },
 {
   "Category": "System Clock",
   "Name": "sysClkConnect",
   "Header": "sysLib.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "No",
   "Mac OSX": "No",
   "VxWorks": "Yes",
   "Description": "Connect callback func to system clock"
 },
 {
   "Category": "System Clock",
   "Name": "sysClkDisable",
   "Header": "sysLib.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "No",
   "Mac OSX": "No",
   "VxWorks": "Yes",
   "Description": "Disable the system clock"
 },
 {
   "Category": "System Clock",
   "Name": "sysClkEnable",
   "Header": "sysLib.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "No",
   "Mac OSX": "No",
   "VxWorks": "Yes",
   "Description": "Enable the system clock"
 },
 {
   "Category": "System Clock",
   "Name": "sysClkRateGet",
   "Header": "sysLib.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "No",
   "Mac OSX": "No",
   "VxWorks": "Yes",
   "Description": "Get the system clock rate"
 },
 {
   "Category": "System Clock",
   "Name": "sysClkRateSet",
   "Header": "sysLib.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "No",
   "Mac OSX": "No",
   "VxWorks": "Yes",
   "Description": "Set the system clock rate"
 },
 {
   "Category": "Time Calculation",
   "Name": "_difftime32",
   "Header": "time.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Version of difftime for 32-bit time_t"
 },
 {
   "Category": "Time Calculation",
   "Name": "_difftime64",
   "Header": "time.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Version of difftime for 64-bit time_t"
 },
 {
   "Category": "Time Calculation",
   "Name": "CompareFileTime",
   "Header": "Windows.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Compares two FILETIMEs"
 },
 {
   "Category": "Time Calculation",
   "Name": "difftime",
   "Header": "time.h",
   "C11 (ISO)": "Yes",
   "POSIX": "Yes",
   "Linux": "Yes",
   "Windows": "Yes",
   "Mac OSX": "Yes",
   "VxWorks": "Yes",
   "Description": "Calculates the difference between two time_t values"
 },
 {
   "Category": "Time Calculation",
   "Name": "timersub",
   "Header": "sys/time.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "Yes",
   "Windows": "No",
   "Mac OSX": "Yes",
   "VxWorks": "No",
   "Description": "Calculates the difference between two timeval values"
 },
 {
   "Category": "Timer/Alarm",
   "Name": "alarm",
   "Header": "unistd.h",
   "C11 (ISO)": "No",
   "POSIX": "Yes",
   "Linux": "Yes",
   "Windows": "No",
   "Mac OSX": "Yes",
   "VxWorks": "Yes",
   "Description": "Schedules an alarm signal"
 },
 {
   "Category": "Timer/Alarm",
   "Name": "getitimer",
   "Header": "sys/time.h",
   "C11 (ISO)": "No",
   "POSIX": "Yes*",
   "Linux": "Yes",
   "Windows": "No",
   "Mac OSX": "Yes",
   "VxWorks": "No",
   "Description": "Gets value of an interval timer in an itimerval struct"
 },
 {
   "Category": "Timer/Alarm",
   "Name": "KillTimer",
   "Header": "WinUser.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "No",
   "Mac OSX": "No",
   "VxWorks": "Yes",
   "Description": "Kill a Windows timer"
 },
 {
   "Category": "Timer/Alarm",
   "Name": "setitimer",
   "Header": "sys/time.h",
   "C11 (ISO)": "No",
   "POSIX": "Yes*",
   "Linux": "Yes",
   "Windows": "No",
   "Mac OSX": "Yes",
   "VxWorks": "No",
   "Description": "Sets an interval timer to the value in an itimerval struct"
 },
 {
   "Category": "Timer/Alarm",
   "Name": "SetTimer",
   "Header": "WinUser.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "No",
   "Mac OSX": "No",
   "VxWorks": "Yes",
   "Description": "Set up a Windows timer"
 },
 {
   "Category": "Timer/Alarm",
   "Name": "timer_cancel",
   "Header": "timers.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "No",
   "Mac OSX": "No",
   "VxWorks": "Yes",
   "Description": "Cancel a timer"
 },
 {
   "Category": "Timer/Alarm",
   "Name": "timer_connect",
   "Header": "timers.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "No",
   "Mac OSX": "No",
   "VxWorks": "Yes",
   "Description": "Connect a callback function to a timer signal"
 },
 {
   "Category": "Timer/Alarm",
   "Name": "timer_create",
   "Header": "time.h",
   "C11 (ISO)": "No",
   "POSIX": "Yes",
   "Linux": "Yes",
   "Windows": "No",
   "Mac OSX": "No",
   "VxWorks": "Yes",
   "Description": "Create a (per process, real-time) timer"
 },
 {
   "Category": "Timer/Alarm",
   "Name": "timer_delete",
   "Header": "time.h",
   "C11 (ISO)": "No",
   "POSIX": "Yes",
   "Linux": "Yes",
   "Windows": "No",
   "Mac OSX": "No",
   "VxWorks": "Yes",
   "Description": "Delete a (per process, real-time) timer"
 },
 {
   "Category": "Timer/Alarm",
   "Name": "timer_getoverrun",
   "Header": "sys/timerfd.h",
   "C11 (ISO)": "No",
   "POSIX": "Yes",
   "Linux": "Yes",
   "Windows": "No",
   "Mac OSX": "No",
   "VxWorks": "Yes",
   "Description": "Gets # of expirations since the signal was generated"
 },
 {
   "Category": "Timer/Alarm",
   "Name": "timer_gettime",
   "Header": "time.h",
   "C11 (ISO)": "No",
   "POSIX": "Yes",
   "Linux": "Yes",
   "Windows": "No",
   "Mac OSX": "No",
   "VxWorks": "Yes",
   "Description": "Gets time before expiration and interval, times use itimerspec struct"
 },
 {
   "Category": "Timer/Alarm",
   "Name": "timer_settime",
   "Header": "time.h",
   "C11 (ISO)": "No",
   "POSIX": "Yes",
   "Linux": "Yes",
   "Windows": "No",
   "Mac OSX": "No",
   "VxWorks": "Yes",
   "Description": "Sets time until next expiration, times use itimerspec structs"
 },
 {
   "Category": "Timer/Alarm",
   "Name": "timerfd_create",
   "Header": "sys/timerfd.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "Yes",
   "Windows": "No",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Create a timer based on a file descriptor"
 },
 {
   "Category": "Timer/Alarm",
   "Name": "timerfd_gettime",
   "Header": "sys/timerfd.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "Yes",
   "Windows": "No",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Gets current settings for a file descriptor, time is in itimerspec struct"
 },
 {
   "Category": "Timer/Alarm",
   "Name": "timerfd_settime",
   "Header": "sys/timerfd.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "Yes",
   "Windows": "No",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Starts or stops a timer for a file descriptor, times are in itimerspec structs"
 },
 {
   "Category": "Timer/Alarm",
   "Name": "ualarm",
   "Header": "unistd.h",
   "C11 (ISO)": "No",
   "POSIX": "No*",
   "Linux": "Yes",
   "Windows": "No",
   "Mac OSX": "Yes",
   "VxWorks": "No",
   "Description": "Schedules a signal after given number of usecs in useconds_t"
 },
 {
   "Category": "Timezone",
   "Name": "_get_daylight",
   "Header": "time.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Retrieves _daylight environment variable"
 },
 {
   "Category": "Timezone",
   "Name": "_get_dstbias",
   "Header": "time.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Retrieves _dstbias environment variable"
 },
 {
   "Category": "Timezone",
   "Name": "_get_timezone",
   "Header": "time.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Retrieves _timezone environment variable"
 },
 {
   "Category": "Timezone",
   "Name": "_get_tzname",
   "Header": "time.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Retrieves _tzname environment variable"
 },
 {
   "Category": "Timezone",
   "Name": "_tzset",
   "Header": "time.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Sets time-related environment variables"
 },
 {
   "Category": "Timezone",
   "Name": "timezone",
   "Header": "time.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "No",
   "Mac OSX": "Yes",
   "VxWorks": "No",
   "Description": "Returns the timezone abbreviation"
 },
 {
   "Category": "Timezone",
   "Name": "tzset",
   "Header": "time.h",
   "C11 (ISO)": "No",
   "POSIX": "Yes",
   "Linux": "Yes",
   "Windows": "Yes",
   "Mac OSX": "Yes",
   "VxWorks": "No",
   "Description": "Sets time-related environment variables"
 },
 {
   "Category": "Timezone",
   "Name": "tzsetwall",
   "Header": "time.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "No",
   "Mac OSX": "Yes",
   "VxWorks": "No",
   "Description": "Helps localtime return best approx of local wall clock time"
 },
 {
   "Category": "Windows Interrupt Time",
   "Name": "QueryInterruptTime",
   "Header": "Realtimeapiset.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Gets current 'interrupt time' in units of 100 nsecs, including sleep time"
 },
 {
   "Category": "Windows Interrupt Time",
   "Name": "QueryInterruptTimePrecise",
   "Header": "Realtimeapiset.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Gets current 'interrupt time' in units of 100 nsecs, including sleep time"
 },
 {
   "Category": "Windows Interrupt Time",
   "Name": "QueryUnbiasedInterruptTime",
   "Header": "Realtimeapiset.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Gets current 'interrupt time' in units of 100 nsecs, not including sleep time"
 },
 {
   "Category": "Windows Interrupt Time",
   "Name": "QueryUnbiasedInterruptTimePrecise",
   "Header": "Realtimeapiset.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Gets current 'interrupt time' in units of 100 nsecs, not including sleep time"
 },
 {
   "Category": "Windows MM Timer",
   "Name": "timeBeginPeriod",
   "Header": "Windows.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "requests a minimum resolution for periodic timers"
 },
 {
   "Category": "Windows MM Timer",
   "Name": "timeEndPeriod",
   "Header": "Windows.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Clears a previously set minimum timer resolution"
 },
 {
   "Category": "Windows MM Timer",
   "Name": "timeGetDevCaps",
   "Header": "Windows.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Queries timer device to get resolution, resolution, in TIMECAPS struct"
 },
 {
   "Category": "Windows MM Timer",
   "Name": "timeGetSystemTime",
   "Header": "Windows.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Gets the time since the system started in msecs, returned as an MMTIME"
 },
 {
   "Category": "Windows MM Timer",
   "Name": "timeGetTime",
   "Header": "Windows.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Gets the time since the system started in msecs, returned as a DWORD"
 },
 {
   "Category": "Windows MM Timer",
   "Name": "timeKillEvent",
   "Header": "Windows.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Cancels a timer event"
 },
 {
   "Category": "Windows MM Timer",
   "Name": "TimeProc",
   "Header": "Windows.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Function called at expiration of event(s)"
 },
 {
   "Category": "Windows MM Timer",
   "Name": "timeSetEvent",
   "Header": "Windows.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Configures a function called after a delay and resolution in msecs in UINT"
 },
 {
   "Category": "Windows Perf Counter",
   "Name": "KeQueryInterruptTime",
   "Header": "Wdm.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Gets interrupt time count in 100 nsec in LONGLONG"
 },
 {
   "Category": "Windows Perf Counter",
   "Name": "KeQueryPerformanceCounter",
   "Header": "Wdm.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Gets current value of performance counter and freq in LARGE_INTEGERs"
 },
 {
   "Category": "Windows Perf Counter",
   "Name": "KeQuerySystemTime",
   "Header": "Wdm.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Gets system time in 100 sec increments since Jan 1, 1601 in LARGE_INTEGER"
 },
 {
   "Category": "Windows Perf Counter",
   "Name": "KeQueryTickCount",
   "Header": "Wdm.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Gets # of interval timer interrupts since system booted in LARGE_INTEGER"
 },
 {
   "Category": "Windows Perf Counter",
   "Name": "KeQueryTimeIncrement",
   "Header": "Wdm.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Gets # of 100 nsecs added to system time on each clock interrupt in LONG"
 },
 {
   "Category": "Windows Perf Counter",
   "Name": "QueryPerformanceCounter",
   "Header": "Windows.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Gets current value of performance counter in LARGE_INTEGER"
 },
 {
   "Category": "Windows Perf Counter",
   "Name": "QueryPerformanceFrequency",
   "Header": "Windows.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Gets performance counter frequency (counts per sec) in LARGE_INTEGER"
 },
 {
   "Category": "Windows Timer",
   "Name": "CreateWaitableTimer",
   "Header": "Windows.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Creates or opens a waitable timer object"
 },
 {
   "Category": "Windows Timer",
   "Name": "SetWaitableTimer",
   "Header": "Windows.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Activates a timer, DueTime is UTC since Jan 1, 1601 in LARGE_INTEGER, period in msecs"
 },
 {
   "Category": "Windows Timer",
   "Name": "SetWaitableTimerEx",
   "Header": "Windows.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Activates a timer, DueTime is UTC since Jan 1, 1601 in LARGE_INTEGER, period in LONG in msecs, also has TolerableDelay in msecs as ULONG"
 },
 {
   "Category": "Windows Timer",
   "Name": "WaitForSingleObject",
   "Header": "Windows.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Wait for an object to be in signaled state or time-out"
 },
 {
   "Category": "Windows Undoc",
   "Name": "NtGetTickCount",
   "Header": "n/a",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Returns system timer's tick count as ULONG"
 },
 {
   "Category": "Windows Undoc",
   "Name": "NtQueryPerformanceCounter",
   "Header": "n/a",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Returns # processor ticks and frequency as LARGE_INTEGERs"
 },
 {
   "Category": "Windows Undoc",
   "Name": "NtQuerySystemTime",
   "Header": "n/a",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Returns current time in UTC format in units of 100 nsecs since Jan 1, 1600"
 },
 {
   "Category": "Windows Undoc",
   "Name": "NtQueryTimerResolution",
   "Header": "n/a",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Gets min, max, and actual timer resolution in 100 nsec units as ULONG"
 },
 {
   "Category": "Windows Undoc",
   "Name": "NtSetSystemTime",
   "Header": "n/a",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Sets system time to given UTC format as LARGE_INTEGER"
 },
 {
   "Category": "Windows Undoc",
   "Name": "NtSetTimerResolution",
   "Header": "n/a",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Requests a timer resolution in 100 nsec units as ULONG"
 },
 {
   "Category": "Windows Undoc",
   "Name": "RtlTimeFieldsToTime",
   "Header": "n/a",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Converts TIME_FIELDS struct to time in LARGE_INTEGER"
 },
 {
   "Category": "Windows Undoc",
   "Name": "RtlTimeToTimeFields",
   "Header": "n/a",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Converts time in LARGE_INTEGER to TIME_FIELDS struct"
 },
 {
   "Category": "Windows 'xtime'",
   "Name": "_Xtime_diff_to_millis",
   "Header": "thr/xtimec.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Returns diff between 2 xtime structs, returned as long in msecs"
 },
 {
   "Category": "Windows 'xtime'",
   "Name": "_Xtime_diff_to_millis2",
   "Header": "thr/xtimec.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Returns diff between current time and xtime struct, returns long in msecs"
 },
 {
   "Category": "Windows 'xtime'",
   "Name": "_Xtime_get_ticks",
   "Header": "thr/xtimec.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Get system time in 100 nsec intervals since the epoch, returned in xtime"
 },
 {
   "Category": "Windows 'xtime'",
   "Name": "xtime_get",
   "Header": "thr/xtimec.h",
   "C11 (ISO)": "No",
   "POSIX": "No",
   "Linux": "No",
   "Windows": "Yes",
   "Mac OSX": "No",
   "VxWorks": "No",
   "Description": "Get the current time returned in an xtime struct"
 }
]